-- 1번 : 주석과 자료형

-- [1] 주석
-- 한줄 주석 : 컴퓨터가 해석하지 않는다. 실행시키지 않을 때나 설명을 작성할 때 사용한다.
/* 범위주석
 * 범위주석도 컴퓨터가 해석하지 않는다.
 * 여러줄에 걸쳐서 주석처리해야하는 경우 사용한다. */

-- [2] 세미콜론
-- ; 세미콜론 : 세미콜론은 하나의 명령이 끝나면 작성한다. 마침표라고 생각하면 된다.
-- 세미콜론을 적어야만 한줄의 끝이라고 생각하기 때문에 세미콜론 이전에 줄바꿈을 해도 상관 없다.

-- 테이블명을 작성할 때 정확하게 작성하려면 계정명을 작성하고 .을 써줘야한다
-- .은 ~안에 라는 의미이다.
-- 지금 로그인된 계정의 테이블의 우선순위보다 높기 때문에 일반적으로 계정명은 생략이 가능하다
SELECT first_name FROM HR.employees;
SELECT FIRST_NAME FROM EMPLOYEES;

-- [3] 자료형
-- 자료형은 테이블을 만들 때 필수로 들어가야한다
-- 문자형 VARCHAR2(n)
SELECT '안녕하세요'
FROM dual;
-- dual 테이블 : 오라클에서 제공하는 기본 내장 테이블(1행 1열)
-- 실제 테이블이 없이 계산, 함수, 문자열 등을 출력하는 테스트 시 사용

-- 숫자형 NUMBER(p, s)
SELECT 10, 20, 10.201
FROM dual;

-- 날짜형 DATE
SELECT SYSDATE 
FROM DUAL;

-- [4] 연산자
-- 산술연산자 : +, -, *, /

SELECT 10 + 5, 10 - 3, 10 * 5, 10 / 3, 10 / 5
FROM DUAL;

-- 날짜데이터 + 숫자데이터 => 날짜 데이터(며칠 뒤인지)
-- 날짜데이터 - 숫자데이터 => 날짜 데이터(며칠 전인지)
-- 날짜데이터 - 날짜데이터 => 숫자 데이터(디데이, 일단위로 계산)
SELECT sysdate, sysdate - 5, sysdate + 5, sysdate - TO_DATE('2025-06-10', 'YYYY-MM-DD')
FROM dual;

-- 관계연산자 : =, <>, !=, >, <, >=, <=
-- WHERE절에서 비교하기 위해 사용한다.
--SELECT 100 = 100 FROM DUAL; 오류발생

SELECT * FROM EMPLOYEES;
-- * 모든 것을 의미(모든 컬럼)
SELECT EMPLOYEE_ID, SALARY
FROM EMPLOYEES;

-- where절 : 행을 필터링할때 사용
SELECT employee_id	-- 3) employee_id 컬럼 출력해줘(조회해석)
FROM EMPLOYEES e	-- 1) employees 테이블에서
WHERE employee_id = 100; -- 2) employee_id = 100 인 행만 필터링해서

-- employee_id 컬럼이 100을 제외하고 조회
SELECT employee_id
FROM employees
WHERE employee_id <> 100;

SELECT salary
FROM EMPLOYEES e 
WHERE salary >= 5000;


-- 논리연산자 : and, or, not
SELECT salary -- 3) SALARY 컬럼을 조회해줘
FROM employees -- 1) EMPLOYEES 테이블에서
WHERE salary >= 5000 AND salary < 10000 -- 2) SALARY 컬럼의 데이터 값이 5000보다 크거나 같고 10000보다 적은 행만 필터링해서
ORDER BY salary ASC; -- 정렬할 때 사용 ASC 오름차순 정렬, DESC 내림차순 정렬
-- 4) SALARY 컬럼의 값을 오름차순으로 정렬해줘

-- SALARY 컬럼과 EMPLOYEE_ID 컬럼을 조회
-- SALARY 값이 10000이상이거나 EMPLOYEE_ID가 300인 행들만 조회

SELECT SALARY, EMPLOYEE_ID
FROM EMPLOYEES
WHERE SALARY >= 10000 OR EMPLOYEE_ID = 300;

-- SQL 연산자
-- BETWEEN A AND B : A이상 B이하인 조건
SELECT *
FROM EMPLOYEES
WHERE SALARY BETWEEN 4800 AND 9000;
-- SALARY >= 4800 AND SALARY <= 9000


-- IN(A, B, C) : A 혹은 B 혹은 C, ... 일 조건
SELECT *
FROM EMPLOYEES
WHERE SALARY IN (4800, 5000, 6000, 7000, 9000);
-- SALARY = 4800 OR SALARY = 5000 OR SALARY = 6000, ...

-- LIKE 문자패턴과 관련된 연산자
-- % : ~ 아무거나
-- _ : 자리수

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME = 'David'; -- 데이터 값을 비교할때 대소문자 구분




























